<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="receiver-main" errorHandlerRef="inBoundErrorHandler">
        <from uri="{{camel.input.endpoint}}" />

        <when>
            <simple>{{openmrs.eip.dbsync.encryption.enabled}} == true</simple>
            <!--
                TODO If we can't decrypt the message, put it in some error queue that blocks all future incoming
                messages
            -->
            <log message="Decrypting message.." />

            <process ref="pgpDecryptService" />
        </when>

        <setProperty name="is-file">
            <method ref="isFilePredicate" />
        </setProperty>

        <choice>
            <when>
                <simple>${exchangeProperty.is-file} == true</simple>
                <log message="Received complex_obs data file: ${headers.CamelFileName}" />

                <transform>
                    <method ref="removeFileTagsExpression" />
                </transform>
                <setProperty name="sync-metadata">
                    <simple>${body.split("#")[0]}</simple>
                </setProperty>
                <setBody>
                    <simple>${body.split("#")[1]}</simple>
                </setBody>
            </when>
            <otherwise>
                <setProperty name="entity-payload">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty name="model-class">
                    <jsonpath>$.tableToSyncModelClass</jsonpath>
                </setProperty>
                <setProperty name="entity-id">
                    <jsonpath>$.model.uuid</jsonpath>
                </setProperty>
                <setBody>
                    <method beanType="org.openmrs.eip.component.utils.JsonUtils" method="unmarshalSyncModel(${body})" />
                </setBody>
                <setProperty name="sync-model">
                    <simple>${body}</simple>
                </setProperty>
            </otherwise>
        </choice>

        <process ref="msgRoutingProcessor" />
    </route>
</routes>
