########################################################################################################################
#                                                                                                                      #
# This file provides a template for core configuration properties for the DB sync receiver application, it contains    #
# in-line documentation for each property. For the spring core properties, please refer to the spring boot docs for    #
# more details.                                                                                                        #
#                                                                                                                      #
# NOTE: For the properties that have preset values, it's recommended not to change them unless you have to, some of    #
# them have placeholders of the form ${my.other.prop.key}, it means all you need to do is set values for the property  #
# key in this file named my.other.prop.key                                                                             #
#                                                                                                                      #
########################################################################################################################


# *********************** DB sync receiver properties ******************************************************************
#
eip.home=${user.home}${file.separator}.openmrs-eip

# The unique identifier assigned to the OpenMRS instance associated to this application
db-sync.receiverId=

# The interval in milliseconds between polls of the retry queue by the retry route
inbound.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
inbound.retry.initial.delay=120000

# When set true, if a payload is received for an existing entity in the receiver database but no existing hash is found,
# it won't block processing of the message
receiver.ignore.missing.hash.for.existing.entity=


# ============================ Properties below to relate to actual message processing tasks ===========================

# ATTENTION!! The processor priority is such that syncing messages should be prioritized, below is the priority order
#
# 1 - Sync - HIGH
# 2 - Cache Eviction - MEDIUM
# 3 - Search Index update - MEDIUM
# 4 - Sending responses - LOW
# 5 - Archiving of synced items - LOW

#
# When configuring the properties below, the sync task should be given the highest priority while sending responses and
# archiving should have the least priority UNLESS requirements dictate otherwise e.g. if these other queues have way
# bigger backlogs and the sync queue is small.

# Number of threads to be used by sync tasks in parallel, defaults to the number of available CPU cores
#parallel.processing.thread.number=

# Number of sites to sync in parallel, defaults to 6, you should possibly not set this value
#sites.sync.parallel.size=

# Number of items to be read from the database by a sync task for processing for each execution, defaults to 1000
#sync.task.batch.size=

# The interval in milliseconds before the first run of each site parent task, defaults to 5 seconds.
#site.task.initial.delay=

# The interval in milliseconds between run of each site parent task, defaults to 5 minutes
#site.task.delay=

# The interval in milliseconds before the first poll of the jms message queue by the jms message task after startup,
# defaults to 5 seconds.
#jms.msg.task.initial.delay=

# The interval in milliseconds between polls of the jms message queue by the jms message tasks, defaults to 30 seconds.
#jms.msg.task.delay=

# A comma separated list of tasks to disable, possible values are SYNCHRONIZER, CACHE_EVICTOR, SEARCH_INDEX_UPDATER,
# RESPONSE_SENDER, ARCHIVER, DELETER. The values MUST be in uppercase
#site.disabled.tasks=

# When set to true, configures the sync task to process items based on natural ordering of primary key id otherwise
# date_created
sync.order.by.id=

# When set to false, disables checks for messages in the JMS queue with duplicate message ids in the management DB, this
# can speed up the reading of new messages from the message broker, note that when set to false it means if a duplicate
# message id is encountered, an exception is thrown and receiver shuts down, this should be set to true to resolve the
# issue by skipping the duplicate message. Defaults to true.
#jms.skip.duplicates=
# ----------------------------------------------------------------------------------------------------------------------


# *********************************************** Sync Reconciliation **************************************************

# Spring cron expression used to schedule the reconciliation process, please refer to spring's documentation for cron
# expressions. To disable, leave the value blank.
# reconcile.schedule.cron=

# The interval in milliseconds before the first poll of the reconcile queue after startup, defaults to 5 seconds.
# It is the task that processes the entire reconciliation iteration.
#reconcile.initial.delay=

# The interval in milliseconds between polls of the reconcile queue, defaults to 5 minutes.
#reconcile.delay=

# The interval in milliseconds before the first poll of the reconcile message queue task after startup, defaults to 5
# seconds. It is the task the processes individual reconciliation payloads.
#reconcile.msg.initial.delay=

# The interval in milliseconds between polls of the reconcile message queue, defaults to 5 minutes.
#reconcile.msg.delay=

# Specifies the number of uuids to tell remote sites to send in a single batch for reconciliation
#reconcile.batch.size=

# Specifies the minimum number of uuids to reconcile in a batch, whenever the processor encounters a batch containing a
# missing uuid, it splits a batch into half and inspects the halves, this process is repeated until the individual
# halves contain uuids less than this number, after which the remaining uuids are processed individually.
#reconcile.process.min.batch.size=

# Specifies the maximum number of uuids to reconcile in a batch
#reconcile.process.max.batch.size=
# ----------------------------------------------------------------------------------------------------------------------



# ***************************************** Sync Prioritization(ADVANCED) **********************************************

# Turns on/off the feature where the processor for messages in the sync queue is prioritized over others to help cut
# down on a growing sync queue, defaults to false
sync.prioritize.disabled=

# The number of days worth in terms of sync time after which the application starts to prioritize item syncing, in
# practice the value should be based on statistics from production, this value along with other factors is used by the
# application to compute a default count of items in the sync after which the sync prioritization feature kicks in,
# defaults to 2 days
sync.prioritize.backlog.threshold.days=

# The count of items in the sync queue after which the prioritization feature kicks in, setting a value for this
# property nullifies the value for the sync.prioritize.backlog.threshold.days property, default value is computed
# based on some factors e.g. number of CPU cores, sync.prioritize.backlog.threshold.days and time it takes to process
# a single sync item
sync.prioritize.threshold=

# The sync prioritization feature periodically polls the sync queue to query the count of items to determine when to
# kick in, to minimise these database queries the count is cached, this value defines the time to live in milliseconds
# of the count in the cache, defaults to 1hr
sync.prioritize.count.cache.ttl=
# ----------------------------------------------------------------------------------------------------------------------


# ********************************************** Sync Archives Pruning *************************************************

# Enables or disables the sync archives pruner task, defaults to false
#archives.pruner.task.enabled=

# Specifies the maximum age in days after which old sender sync archives will be pruned
#archives.pruner.max.age.days=

# The interval in milliseconds before the first poll of the sync archive queue by the pruner task after startup,
# defaults to 60 seconds.
#archives.pruner.initial.delay=

# The interval in milliseconds between polls of the sync archive queue by the pruner tasks, defaults to 1 day
#archives.pruner.delay=

# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
#logging.config=classpath:logback-console.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=INFO

# Logging level for ONLY application class loggers, feel free to add more logger configurations
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
logging.level.receiver-request-processor=${openmrs.eip.log.level}
logging.level.shutdown-route=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port
server.port=8082
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Receiver camel routes location ***************************************************************
#
# Location of the Camel routes xml files
camel.springboot.routes-include-pattern=file:routes${file.separator}*.xml
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Webapp Configuration *****************************************************************
#
# The purpose of this config is so that the receiver sync app can make a rest call to trigger search index rebuild
# it processes a payload for an indexed entity e.g. person_name, person_attribute, patient_identifier etc.
# It's highly recommended that you create a specific user account for use here
#
# The base URL to the receiving OpenMRS webapp
openmrs.baseUrl=

# The username for the account to use to log into the receiver OpenMRS instance
openmrs.username=

# The password for the account to use to log into the receiver OpenMRS instance
openmrs.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the openMRS database to write to *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
openmrs.db.host=

# The OpenMRS MySQL database port
openmrs.db.port=

# The OpenMRS MySQL database name
openmrs.db.name=
# ---------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource
spring.openmrs-datasource.driverClassName=com.mysql.jdbc.Driver

# Url of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# Username of the openMRS datasource
spring.openmrs-datasource.username=

# Password of the openMRS datasource
spring.openmrs-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.driverClassName=org.h2.Driver

# Url of the management datasource
spring.mngt-datasource.jdbcUrl=

# Username of the management datasource
spring.mngt-datasource.username=

# Password of the management datasource
spring.mngt-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** ActiveMQ configuration ***********************************************************************
#
# IP address or host name of the Artemis MQ broker shared with the receiver
spring.artemis.host=

# Artemis broker port
spring.artemis.port=

# Username of the account to use to connect to the Artemis broker
spring.artemis.user=

# Password of the account to use to connect to the Artemis broker
spring.artemis.password=

# Specifies if the application should connect to artemis broker over SSL or not
artemis.ssl.enabled=

# The maximum wait in milliseconds between reconnection attempts to activeMQ, defaults to 30 minutes
max.reconnect.delay=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the ArtemisMQ endpoint to read from inbound DB sync payloads ****************
#
# The name of the queue in the message broker to read from inbound messages
sync.queue.name=openmrs.sync
# ----------------------------------------------------------------------------------------------------------------------

# ******************** Configuration of the ArtemisMQ endpoint to send payloads. ***************************************
# Camel JMS Endpoint e.g. activemq:<queue-name>.myRemoteSiteId, {0} is the senderId, and will be set dynamically in
# runtime
camel.output.endpoint=activemq:openmrs.sync.{0}
# ----------------------------------------------------------------------------------------------------------------------
