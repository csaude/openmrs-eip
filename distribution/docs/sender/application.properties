########################################################################################################################
#                                                                                                                      #
# This file provides a template for core configuration properties for the DB sync sender application, it contains      #
# in-line documentation for each property. For the spring core properties, please refer to the spring boot docs for    #
# more details.                                                                                                        #
#                                                                                                                      #
# NOTE: For the properties that have preset values, it's recommended not to change them unless you have to, some of    #
# them have placeholders of the form ${my.other.prop.key}, it means all you need to do is set values for the property  #
# key in this file named my.other.prop.key                                                                             #
#                                                                                                                      #
########################################################################################################################


# *********************** General EIP sender properties ****************************************************************
#
eip.home=${user.home}${file.separator}.openmrs-eip

# The unique identifier assigned to the OpenMRS instance associated to this application
# This should be obtained from the receiving instance
db-sync.senderId=

# Number of items to be read from the database by a task for processing for each execution, defaults to 1000
#sync.task.batch.size=

# When batch mode is enabled for sending sync messages to activemq, this value specifies the maximum number of messages
# to be sent in a single batch, defaults to 200.
jms.send.batch.size=

# Specifies the outbound message size threshold after which the message will be compressed before sending to the
# message broker, if the compressed message is still larger than this size, the message will be sent in stream mode.
# Defaults to 45KiB. If you wish to set this to some other value, it is recommended to be half the configured large
# message size value in artemisMQ, this is because artemis uses 2 bytes per message character which makes the actual
# message size in artemis to be double that of the original sent message.
jms.large.msg.size=

# The interval in milliseconds before the first poll of the debezium event queue by the debezium reader route when the
# application starts.
debezium-event-reader.initial.delay=60000

# The interval in milliseconds between polls of the debezium event queue by the debezium reader route
debezium-event-reader.repeat.interval=30000

# The interval in milliseconds between polls of the retry queue by the retry route
db-event.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
db-event.retry.initial.delay=120000

# Number of threads to use to process items in parallel, defaults to the number of available CPU cores
#parallel.processing.thread.number=

# The interval in milliseconds before the first poll of the sender sync message queue when the application starts.
sender-sync-msg-reader.initial.delay=120000

# The interval in milliseconds between polls of the retry queue by the  sender sync message reader route
sender-sync-msg-reader.delay=60000

# The interval in milliseconds before the first poll of the response queue by the reader route when the application
# starts.
sync-response-reader.initial.delay=120000

# The interval in milliseconds between sender sync responses fetches by the sync response reader route.
sync-response-reader.delay=60000
# ----------------------------------------------------------------------------------------------------------------------


# *********************************************** Sync Reconciliation **************************************************

# The interval in milliseconds before the first poll of the sender reconcile queue after startup, defaults to 5 seconds.
# It is the task that processes the entire reconciliation iteration.
#reconcile.initial.delay=

# The interval in milliseconds between polls of the sender reconcile queue, defaults to 5 minutes.
#reconcile.delay=

# The interval in milliseconds before the first poll of the table reconcile message queue task after startup, defaults
# to 5 seconds.
#reconcile.table.initial.delay=

# The interval in milliseconds between polls of the table reconcile message queue, defaults to 5 minutes.
#reconcile.table.delay=
# ----------------------------------------------------------------------------------------------------------------------


# ========================================= Sync Archives Pruning ======================================================

# Enables or disables the sync archives pruner task, defaults to false
#archives.pruner.task.enabled=

# Specifies the maximum age in days after which old receiver sync archives will be pruned
#archives.pruner.max.age.days=

# The interval in milliseconds before the first poll of the sync archive queue by the pruner task after startup,
# defaults to 60 seconds.
#archives.pruner.initial.delay=

# The interval in milliseconds between polls of the sync archive queue by the pruner tasks, defaults to 1 day
#archives.pruner.delay=

# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
#logging.config=classpath:logback-console.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=INFO

# Logging level for ONLY application class loggers, feel free to add more logger configurations
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
logging.level.outbound-error-handler=${openmrs.eip.log.level}
logging.level.db-event-processor=${openmrs.eip.log.level}
logging.level.out-bound-db-sync=${openmrs.eip.log.level}
logging.level.debezium=${openmrs.eip.log.level}
logging.level.sender-retry=${openmrs.eip.log.level}
logging.level.debezium-event-reader=${openmrs.eip.log.level}
logging.level.debezium-event-processor=${openmrs.eip.log.level}
logging.level.sender-request-processor=${openmrs.eip.log.level}
logging.level.sender-activemq-consumer=${openmrs.eip.log.level}
logging.level.sender-activemq-publisher=${openmrs.eip.log.level}
logging.level.sync-response-processor=${openmrs.eip.log.level}
logging.level.sync-response-reader=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port
server.port=8081
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Sender camel routes location *****************************************************************
#
# Location of the Camel routes xml files
camel.springboot.routes-include-pattern=file:routes${file.separator}*.xml
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the openMRS database to read from *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
openmrs.db.host=

# The OpenMRS MySQL database port
openmrs.db.port=

# The OpenMRS MySQL database name
openmrs.db.name=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource
spring.openmrs-datasource.driverClassName=com.mysql.jdbc.Driver

# Url of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# Username of the openMRS datasource
spring.openmrs-datasource.username=

# Password of the openMRS datasource
spring.openmrs-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.driverClassName=org.h2.Driver

# Url of the management datasource
spring.mngt-datasource.jdbcUrl=

# Username of the management datasource
spring.mngt-datasource.username=

# Password of the management datasource
spring.mngt-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Debezium Config ******************************************************************************
#
# For details explanations of these properties, please refer to
# https://debezium.io/documentation/reference/2.4/connectors/mysql.html#mysql-connector-properties
#
# Maps to the connector property named database.server.id, MUST match the server-id value in my.cnf file when you
# enabled mysql binlog, DO NOT change after setting it
debezium.db.serverId=

# Unique logical name of the MySQL database server, maps to the debezium MySQL connector property named
# database.server.name, DO NOT change after setting it
debezium.db.serverName=

# Database username for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.user, it's highly recommended to create separate user account as described at
# https://debezium.io/documentation/reference/2.4/connectors/mysql.html#setting-up-mysql
debezium.db.user=

# Database password for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.password
debezium.db.password=

# Specifies the criteria for running a snapshot when the connector starts, DO NOT change after setting it, maps to the
# debezium MySQL connector property named snapshot.mode
debezium.snapshotMode=schema_only

# Maximum size of each batch of source records to be read by debezium from the binlog files, maps to the
## debezium MySQL connector property named max.batch.size
#https://debezium.io/documentation/reference/2.4/connectors/mysql.html#mysql-property-max-batch-size
debezium.reader.maxBatchSize=2048

# The 2 properties below are debezium engine specific and are documented at
# https://debezium.io/documentation/reference/2.4/development/engine.html#engine-properties
#
# Path to file where offsets are to be stored, maps to property named offset.storage.file.filename, DO NOT change after
# setting it
debezium.offsetFilename=${eip.home}${file.separator}.debezium${file.separator}offsets.txt

# Path to file where offsets are to be stored, maps to property named database.history.file.filename, DO NOT change
# after setting it
debezium.historyFilename=${eip.home}${file.separator}.debezium${file.separator}dbhistory.txt
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Binary Log Purge Configuration ***************************************************************
#
# When set to true, the binary log purging feature is enabled otherwise it is disabled, defaults to false.
#binlog.purger.task.enabled=

# The maximum number of processed binary log files to keep, the rest are deleted, defaults to 100.
#binlog.files.processed.keep.max=

# The interval in milliseconds before the first attempt to purge binary log files when the application starts, defaults
# to 1 minute.
#binlog.purger.initial.delay=

# The interval in milliseconds between attempts to purge processed binary log files, defaults to 1 day.
#binlog.purger.delay=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** ActiveMQ configuration ***********************************************************************
#
# IP address or host name of the Artemis MQ broker shared with the receiver
spring.artemis.host=

# Artemis broker port
spring.artemis.port=

# Username of the account to use to connect to the Artemis broker
spring.artemis.user=

# Password of the account to use to connect to the Artemis broker
spring.artemis.password=

# Specifies if the application should connect to artemis broker over SSL or not
artemis.ssl.enabled=

# The maximum wait in milliseconds between reconnection attempts to activeMQ, defaults to 30 minutes
max.reconnect.delay=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the ArtemisMQ endpoint to send out bound DB sync events *********************
#
# Use either one of the following confs. JMS endpoint if ArtemisMQ is configured or file endpoint, note that file
# endpoint is ONLY for TESTING purposes
# Camel JMS Endpoint e.g. activemq:<queue-name> or FILE Endpoint e.g. file:<folderPath> Should be absolute path
camel.output.endpoint=activemq:openmrs.sync
# ----------------------------------------------------------------------------------------------------------------------
