<routes xmlns="http://camel.apache.org/schema/spring">

	<route id="sender-activemq-publisher" errorHandlerRef="shutdownErrorHandler">

		<from uri="scheduler:active_mq_publisher?initialDelay={{active-mq-publisher.initial.delay}}&amp;delay={{active-mq-publisher.delay}}" />

		<log message="Fetching next 500 sender sync messages" loggingLevel="DEBUG" />

		<toD uri="jpa:SenderSyncMessage?query=SELECT m FROM SenderSyncMessage m WHERE m.status = 'NEW' ORDER BY m.dateCreated ASC, m.id ASC&amp;maximumResults=500" />

		<choice>
			<when>
				<simple>${body.size()} > 0</simple>
				<log message="Fetched ${body.size()} sender sync messages" />

				<split parallelProcessing="false" stopOnException="true">
					<simple>${body}</simple>
					<setProperty name="senderSyncMessage">
						<simple>${body}</simple>
					</setProperty>

					<log message="Preparing sender sync message -> ${exchangeProperty.senderSyncMessage}" />

					<choice>
						<when>
							<simple>${exchangeProperty.senderSyncMessage.operation} == 'd'</simple>
							<setBody>
								<spel>#{new org.openmrs.eip.component.model.SyncModel()}</spel>
							</setBody>
							<script>
								<spel>
									#{body.setTableToSyncModelClass(T(org.openmrs.eip.component.service.TableToSyncEnum).getTableToSyncEnum(getProperty('senderSyncMessage').tableName).modelClass)}
									#{body.setModel(body.tableToSyncModelClass.getConstructor().newInstance())}
									#{body.model.setUuid(getProperty('senderSyncMessage').identifier)}
									#{body.setMetadata(new org.openmrs.eip.component.model.SyncMetadata())}
								</spel>
							</script>

							<log message="Deleted entity payload -> ${body}" />
						</when>
						<otherwise>
							<log message="Loading entity from DB with identifier ${exchangeProperty.senderSyncMessage.identifier}" loggingLevel="DEBUG" />

							<toD uri="openmrs:extract?tableToSync=${exchangeProperty.senderSyncMessage.tableName.toUpperCase()}&amp;uuid=${exchangeProperty.senderSyncMessage.identifier}" />

							<log loggingLevel="DEBUG" message="Loaded entity -> ${body}" />

							<choice>
								<when>
									<simple>${body.size()} == 1</simple>
									<setBody>
										<jsonpath>$[0]</jsonpath>
									</setBody>
								</when>
								<otherwise>
									<setBody>
										<simple>${null}</simple>
									</setBody>
								</otherwise>
							</choice>
						</otherwise>
					</choice>

					<choice>
						<when>
							<simple>${body} != null || ${exchangeProperty.senderSyncMessage.operation} == 'r'</simple>
							<when>
								<simple>${body} == null</simple>

								<log message="Entity not found for request with uuid: ${exchangeProperty.senderSyncMessage.requestUuid}" />

								<setBody>
									<spel>#{new org.openmrs.eip.component.model.SyncModel()}</spel>
								</setBody>
								<script>
									<spel>
										#{body.setMetadata(new org.openmrs.eip.component.model.SyncMetadata())}
									</spel>
								</script>
							</when>

							<script>
								<spel>
									#{body.metadata.setSourceIdentifier('{{db-sync.senderId}}')}
									#{body.metadata.setDateSent(T(java.time.LocalDateTime).now())}
									#{body.metadata.setOperation(getProperty('senderSyncMessage').operation)}
									#{body.metadata.setRequestUuid(getProperty('senderSyncMessage').requestUuid)}
									#{body.metadata.setMessageUuid(getProperty('senderSyncMessage').messageUuid)}
									#{body.metadata.setSnapshot(getProperty('senderSyncMessage').snapshot)}
								</spel>
							</script>
							<setBody>
								<method beanType="org.openmrs.eip.component.utils.JsonUtils" method="marshall(${body})" />
							</setBody>

							<log loggingLevel="DEBUG" message="Sync payload -> ${body}" />

							<when>
								<simple>{{openmrs.eip.dbsync.encryption.enabled}} == true</simple>
								<log message="Encrypting entity payload.." />

								<process ref="pgpEncryptService" />

								<log message="Encrypted entity payload -> ${body}" loggingLevel="TRACE" />
							</when>

							<log message="Sending entity to sync destination: {{camel.output.endpoint}}" />

							<toD uri="{{camel.output.endpoint}}" />

							<log message="Entity sent!" loggingLevel="DEBUG" />

							<script>
								<spel>
									#{getProperty('senderSyncMessage').markAsSent()}
								</spel>
							</script>

							<setBody>
								<simple>${exchangeProperty.senderSyncMessage}</simple>
							</setBody>

							<log message="Updating sender sync message with identifier ${exchangeProperty.senderSyncMessage.identifier} to ${exchangeProperty.senderSyncMessage.status}" loggingLevel="DEBUG" />

							<to uri="jpa:SenderSyncMessage" />

							<log
								message="Successfully updated sender sync message with identifier ${exchangeProperty.senderSyncMessage.identifier} to ${exchangeProperty.senderSyncMessage.status}" />

							<!-- Update SenderSyncMessageHistory -->
							<toD
								uri="jpa:SenderSyncMessageHistory?query=SELECT detail FROM SenderSyncMessageHistory detail WHERE detail.messageUuid='${exchangeProperty.senderSyncMessage.messageUuid}'" />
							<choice>
								<when>
									<simple>${body.size()} > 0</simple>
									<setProperty name="senderSyncMessageHistory">
										<simple>${body[0]}</simple>
									</setProperty>

									<script>
										<spel>
											#{getProperty('senderSyncMessageHistory').markAsSent()}
										</spel>
									</script>

									<setBody>
										<simple>${exchangeProperty.senderSyncMessageHistory}</simple>
									</setBody>
									<to uri="jpa:SenderSyncMessageHistory" />
								</when>
							</choice>
							<!-- Update SenderSyncMessageHistory -->
						</when>

						<otherwise>
							<log message="No entity found in the database matching identifier ${exchangeProperty.senderSyncMessage.identifier} in table ${exchangeProperty.senderSyncMessage.tableName}" />
							<log message="Removing sender sync message with identifier ${exchangeProperty.senderSyncMessage.identifier}" loggingLevel="DEBUG" />

							<toD uri="jpa:SenderSyncMessage?query=DELETE FROM SenderSyncMessage WHERE id = ${exchangeProperty.senderSyncMessage.id}" />

							<log loggingLevel="DEBUG" message="Successfully removed sender sync message with identifier ${exchangeProperty.senderSyncMessage.identifier}" />
						</otherwise>
					</choice>
				</split>
			</when>
			<otherwise>
				<log message="No sender sync messages found" loggingLevel="DEBUG" />
			</otherwise>
		</choice>
	</route>
</routes>
